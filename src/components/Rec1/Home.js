import React, { useState } from 'react';
import './Home.css';
import SearchBar from './SearchBar';
import Card from './Card';

export default function Home({showNav}) {

  const [dragging, setDragging] = useState(false);
  const [draggedItemId, setDraggedItemId] = useState(null);
  const [draggedItemOffset, setDraggedItemOffset] = useState({ x: 0, y: 0 });
  
  const [tiltCardId, setTiltCardId] = useState('');
  const [toDo, setToDo] = useState([
    { id: '1', head: 'Brainstroming' , text:"Brainstorming brings team members' diverse experience into play. " , priority:3},
    { id: '2', head: 'Research' , text:"User research helps you to create an optimal product for users." , priority:2},
    { id: '3', head: 'Wireframes' , text:"Low fidelity wireframes include the most basic content and visuals." , priority:2 },
  ]);

  const [onProgress, setOnProgress] = useState([
    { id: '4', head: 'Onboarding Illustrations' , text:'' , priority:3 },
    { id: '5', head: 'Moodboard' , text:'' , priority:3 },
  ]);

  const [done, setDone] = useState([
    { id: '6', head: 'Mobile App Design' , text:'' , priority:1 },
    { id: '6', head: 'Design System' , text:'' , priority:1 },
  ]);

  const handleDrop = (event, targetList) => {

    setTiltCardId('');

    event.preventDefault();

    const cardId = event.dataTransfer.getData('text');
    const sourceList = getCardList(cardId);

    if (sourceList === targetList) {
      return; // No changes needed if dropping in the same list
    }

    const sourceState = getSourceState(sourceList);
    const targetState = getTargetState(targetList);

    const cardIndex = sourceState.findIndex((card) => card.id === cardId);
    if (cardIndex > -1) {
      const updatedSourceState = Array.from(sourceState);
      const [removedCard] = updatedSourceState.splice(cardIndex, 1);
      const updatedTargetState = [...targetState, removedCard];
      updateStates(sourceList, updatedSourceState, targetList, updatedTargetState);
      setDragging(false);
    }
  };

  const getSourceState = (sourceList) => {
    switch (sourceList) {
      case 'toDo':
        return toDo;
      case 'onProgress':
        return onProgress;
      case 'done':
        return done;
      default:
        return [];
    }
  };

  const getTargetState = (targetList) => {
    switch (targetList) {
      case 'toDo':
        return toDo;
      case 'onProgress':
        return onProgress;
      case 'done':
        return done;
      default:
        return [];
    }
  };

  const updateStates = (sourceList, updatedSourceState, targetList, updatedTargetState) => {
    switch (sourceList) {
      case 'toDo':
        setToDo(updatedSourceState);
        break;
      case 'onProgress':
        setOnProgress(updatedSourceState);
        break;
      case 'done':
        setDone(updatedSourceState);
        break;
      default:
        break;
    }

    switch (targetList) {
      case 'toDo':
        setToDo(updatedTargetState);
        break;
      case 'onProgress':
        setOnProgress(updatedTargetState);
        break;
      case 'done':
        setDone(updatedTargetState);
        break;
      default:
        break;
    }
  };

  const getCardList = (cardId) => {
    if (toDo.some((card) => card.id === cardId)) {
      return 'toDo';
    }
    if (onProgress.some((card) => card.id === cardId)) {
      return 'onProgress';
    }
    if (done.some((card) => card.id === cardId)) {
      return 'done';
    }
    return '';
  };

  const handleDragOver = (event) => {
    event.preventDefault();
  };


  const showNavStyles = {
    showNav:{
      left:'230px'
    },
    hideNav:{
      left:'0px'
    },    
  }

  const dragStarted = (event, cardId) => {
    event.preventDefault();
    setTiltCardId(cardId);


    // Complete code to move element along with cursor
    
    // event.target.style.left = event.clientX +"px";
    // event.target.style.top = event.clientY +"px";
  }

  return (
    <div className="home-content" style={showNav === true ? showNavStyles.showNav : showNavStyles.hide}>
      <SearchBar />
      <div className="column-options">
        <svg width="344" height="56" viewBox="0 0 344 56" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M283.25 43.5H290.75C297 43.5 299.5 41 299.5 34.75V27.25C299.5 21 297 18.5 290.75 18.5H283.25C277 18.5 274.5 21 274.5 27.25V34.75C274.5 41 277 43.5 283.25 43.5Z" fill="#5030E5" fill-opacity="0.2" />
          <path d="M288.137 25.8L281.65 32.2875C281.4 32.5375 281.162 33.025 281.112 33.375L280.762 35.85C280.637 36.75 281.262 37.375 282.162 37.25L284.637 36.9C284.987 36.85 285.475 36.6125 285.725 36.3625L292.212 29.875C293.325 28.7625 293.862 27.4625 292.212 25.8125C290.562 24.15 289.262 24.675 288.137 25.8Z" stroke="#5030E5" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
          <path d="M287.212 26.725C287.762 28.6875 289.3 30.2375 291.275 30.7875" stroke="#5030E5" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
          <path d="M325.25 43.5H332.75C339 43.5 341.5 41 341.5 34.75V27.25C341.5 21 339 18.5 332.75 18.5H325.25C319 18.5 316.5 21 316.5 27.25V34.75C316.5 41 319 43.5 325.25 43.5Z" fill="#5030E5" fill-opacity="0.2" />
          <path d="M330.993 35.3167H332C334.383 35.3167 336.317 33.3829 336.317 31C336.317 28.6172 334.383 26.6833 332 26.6833H331C330.636 26.6833 330.35 26.9785 330.35 27.3333C330.35 27.6895 330.644 27.9833 331 27.9833H332C333.664 27.9833 335.017 29.3362 335.017 31C335.017 32.6638 333.664 34.0167 332 34.0167H330.993C330.637 34.0167 330.343 34.3105 330.343 34.6667C330.343 35.0229 330.637 35.3167 330.993 35.3167Z" fill="#5030E5" stroke="#5030E5" stroke-width="0.3" />
          <path d="M326 35.3167H327C327.356 35.3167 327.65 35.0229 327.65 34.6667C327.65 34.3105 327.356 34.0167 327 34.0167H326C324.336 34.0167 322.983 32.6638 322.983 31C322.983 29.3362 324.336 27.9833 326 27.9833H327C327.356 27.9833 327.65 27.6895 327.65 27.3333C327.65 26.9772 327.356 26.6833 327 26.6833H326C323.617 26.6833 321.683 28.6172 321.683 31C321.683 33.3829 323.617 35.3167 326 35.3167Z" fill="#5030E5" stroke="#5030E5" stroke-width="0.3" />
          <path d="M326.333 31.65H331.667C332.023 31.65 332.317 31.3562 332.317 31C332.317 30.6438 332.023 30.35 331.667 30.35H326.333C325.977 30.35 325.683 30.6438 325.683 31C325.683 31.3562 325.977 31.65 326.333 31.65Z" fill="#5030E5" stroke="#5030E5" stroke-width="0.3" />
          <path d="M3.29972 11.5455H10.7159L20.6477 35.7869H21.0398L30.9716 11.5455H38.3878V45H32.5724V22.0163H32.2621L23.0163 44.902H18.6712L9.42543 21.9673H9.11506V45H3.29972V11.5455ZM55.6705 45.4901C53.2202 45.4901 51.0966 44.951 49.2997 43.8729C47.5028 42.7947 46.1089 41.2865 45.1179 39.348C44.1378 37.4096 43.6477 35.1444 43.6477 32.5526C43.6477 29.9607 44.1378 27.6901 45.1179 25.7408C46.1089 23.7914 47.5028 22.2777 49.2997 21.1996C51.0966 20.1214 53.2202 19.5824 55.6705 19.5824C58.1207 19.5824 60.2443 20.1214 62.0412 21.1996C63.8381 22.2777 65.2266 23.7914 66.2067 25.7408C67.1977 27.6901 67.6932 29.9607 67.6932 32.5526C67.6932 35.1444 67.1977 37.4096 66.2067 39.348C65.2266 41.2865 63.8381 42.7947 62.0412 43.8729C60.2443 44.951 58.1207 45.4901 55.6705 45.4901ZM55.7031 40.7528C57.0317 40.7528 58.1425 40.388 59.0355 39.6584C59.9285 38.9179 60.5928 37.9268 61.0284 36.6854C61.4749 35.4439 61.6982 34.0608 61.6982 32.5362C61.6982 31.0007 61.4749 29.6122 61.0284 28.3707C60.5928 27.1184 59.9285 26.1219 59.0355 25.3814C58.1425 24.6409 57.0317 24.2706 55.7031 24.2706C54.3419 24.2706 53.2093 24.6409 52.3054 25.3814C51.4124 26.1219 50.7427 27.1184 50.2962 28.3707C49.8606 29.6122 49.6428 31.0007 49.6428 32.5362C49.6428 34.0608 49.8606 35.4439 50.2962 36.6854C50.7427 37.9268 51.4124 38.9179 52.3054 39.6584C53.2093 40.388 54.3419 40.7528 55.7031 40.7528ZM72.9735 45V11.5455H78.8869V24.0582H79.1319C79.4368 23.4484 79.867 22.8004 80.4224 22.1143C80.9778 21.4174 81.7292 20.8239 82.6767 20.3338C83.6241 19.8329 84.8329 19.5824 86.3031 19.5824C88.2415 19.5824 89.9894 20.0779 91.5467 21.0689C93.1149 22.049 94.3564 23.5028 95.2711 25.4304C96.1968 27.3471 96.6596 29.6993 96.6596 32.4872C96.6596 35.2424 96.2077 37.5838 95.3038 39.5114C94.3999 41.4389 93.1693 42.9091 91.612 43.9219C90.0547 44.9347 88.2905 45.4411 86.3194 45.4411C84.8819 45.4411 83.6895 45.2015 82.742 44.7223C81.7946 44.2431 81.0323 43.666 80.4551 42.9908C79.8888 42.3047 79.4477 41.6567 79.1319 41.0469H78.7889V45H72.9735ZM78.7725 32.4545C78.7725 34.0772 79.0012 35.4983 79.4586 36.718C79.9269 37.9377 80.5967 38.8906 81.4679 39.5767C82.35 40.2519 83.4172 40.5895 84.6696 40.5895C85.9764 40.5895 87.0708 40.241 87.9529 39.544C88.8351 38.8362 89.4993 37.8724 89.9458 36.6527C90.4032 35.4221 90.6319 34.0227 90.6319 32.4545C90.6319 30.8973 90.4087 29.5142 89.9622 28.3054C89.5157 27.0966 88.8514 26.1491 87.9693 25.4631C87.0872 24.777 85.9873 24.4339 84.6696 24.4339C83.4063 24.4339 82.3336 24.7661 81.4515 25.4304C80.5694 26.0947 79.8997 27.0258 79.4423 28.2237C78.9958 29.4216 78.7725 30.8319 78.7725 32.4545ZM101.687 45V19.9091H107.6V45H101.687ZM104.66 16.348C103.723 16.348 102.917 16.0376 102.242 15.4169C101.567 14.7853 101.229 14.0284 101.229 13.1463C101.229 12.2533 101.567 11.4964 102.242 10.8757C102.917 10.2441 103.723 9.92827 104.66 9.92827C105.607 9.92827 106.413 10.2441 107.077 10.8757C107.753 11.4964 108.09 12.2533 108.09 13.1463C108.09 14.0284 107.753 14.7853 107.077 15.4169C106.413 16.0376 105.607 16.348 104.66 16.348ZM119.594 11.5455V45H113.681V11.5455H119.594ZM136.783 45.4901C134.267 45.4901 132.095 44.9673 130.265 43.9219C128.447 42.8655 127.047 41.3736 126.067 39.446C125.087 37.5076 124.597 35.2261 124.597 32.6016C124.597 30.0206 125.087 27.7554 126.067 25.8061C127.058 23.8459 128.441 22.3213 130.216 21.2322C131.991 20.1323 134.077 19.5824 136.473 19.5824C138.019 19.5824 139.478 19.8329 140.85 20.3338C142.234 20.8239 143.453 21.5862 144.51 22.6207C145.577 23.6553 146.415 24.973 147.025 26.5739C147.635 28.1638 147.94 30.0587 147.94 32.2585V34.0717H127.374V30.0859H142.272C142.261 28.9534 142.016 27.946 141.537 27.0639C141.057 26.1709 140.388 25.4685 139.527 24.9567C138.678 24.4448 137.687 24.1889 136.554 24.1889C135.346 24.1889 134.284 24.483 133.369 25.071C132.454 25.6482 131.741 26.4105 131.229 27.358C130.728 28.2945 130.472 29.3236 130.461 30.4453V33.9247C130.461 35.384 130.728 36.6364 131.262 37.6818C131.795 38.7164 132.541 39.5114 133.5 40.0668C134.458 40.6113 135.58 40.8835 136.865 40.8835C137.725 40.8835 138.504 40.7637 139.201 40.5241C139.898 40.2737 140.502 39.9089 141.014 39.4297C141.526 38.9505 141.912 38.357 142.174 37.6491L147.695 38.2699C147.346 39.7292 146.682 41.0033 145.702 42.0923C144.733 43.1705 143.491 44.009 141.978 44.608C140.464 45.196 138.732 45.4901 136.783 45.4901ZM168.91 45H162.442L174.219 11.5455H181.701L193.495 45H187.026L178.091 18.4062H177.829L168.91 45ZM169.123 31.8828H186.765V36.7507H169.123V31.8828ZM197.64 54.4091V19.9091H203.455V24.0582H203.798C204.103 23.4484 204.533 22.8004 205.089 22.1143C205.644 21.4174 206.396 20.8239 207.343 20.3338C208.29 19.8329 209.499 19.5824 210.969 19.5824C212.908 19.5824 214.656 20.0779 216.213 21.0689C217.781 22.049 219.023 23.5028 219.938 25.4304C220.863 27.3471 221.326 29.6993 221.326 32.4872C221.326 35.2424 220.874 37.5838 219.97 39.5114C219.066 41.4389 217.836 42.9091 216.278 43.9219C214.721 44.9347 212.957 45.4411 210.986 45.4411C209.548 45.4411 208.356 45.2015 207.408 44.7223C206.461 44.2431 205.699 43.666 205.121 42.9908C204.555 42.3047 204.114 41.6567 203.798 41.0469H203.553V54.4091H197.64ZM203.439 32.4545C203.439 34.0772 203.668 35.4983 204.125 36.718C204.593 37.9377 205.263 38.8906 206.134 39.5767C207.016 40.2519 208.084 40.5895 209.336 40.5895C210.643 40.5895 211.737 40.241 212.619 39.544C213.501 38.8362 214.166 37.8724 214.612 36.6527C215.07 35.4221 215.298 34.0227 215.298 32.4545C215.298 30.8973 215.075 29.5142 214.629 28.3054C214.182 27.0966 213.518 26.1491 212.636 25.4631C211.754 24.777 210.654 24.4339 209.336 24.4339C208.073 24.4339 207 24.7661 206.118 25.4304C205.236 26.0947 204.566 27.0258 204.109 28.2237C203.662 29.4216 203.439 30.8319 203.439 32.4545ZM226.39 54.4091V19.9091H232.205V24.0582H232.548C232.853 23.4484 233.283 22.8004 233.839 22.1143C234.394 21.4174 235.146 20.8239 236.093 20.3338C237.04 19.8329 238.249 19.5824 239.719 19.5824C241.658 19.5824 243.406 20.0779 244.963 21.0689C246.531 22.049 247.773 23.5028 248.688 25.4304C249.613 27.3471 250.076 29.6993 250.076 32.4872C250.076 35.2424 249.624 37.5838 248.72 39.5114C247.816 41.4389 246.586 42.9091 245.028 43.9219C243.471 44.9347 241.707 45.4411 239.736 45.4411C238.298 45.4411 237.106 45.2015 236.158 44.7223C235.211 44.2431 234.449 43.666 233.871 42.9908C233.305 42.3047 232.864 41.6567 232.548 41.0469H232.303V54.4091H226.39ZM232.189 32.4545C232.189 34.0772 232.418 35.4983 232.875 36.718C233.343 37.9377 234.013 38.8906 234.884 39.5767C235.766 40.2519 236.834 40.5895 238.086 40.5895C239.393 40.5895 240.487 40.241 241.369 39.544C242.251 38.8362 242.916 37.8724 243.362 36.6527C243.82 35.4221 244.048 34.0227 244.048 32.4545C244.048 30.8973 243.825 29.5142 243.379 28.3054C242.932 27.0966 242.268 26.1491 241.386 25.4631C240.504 24.777 239.404 24.4339 238.086 24.4339C236.823 24.4339 235.75 24.7661 234.868 25.4304C233.986 26.0947 233.316 27.0258 232.859 28.2237C232.412 29.4216 232.189 30.8319 232.189 32.4545Z" fill="#0D062D" />
        </svg>

        <div className='other-options'>
          <svg width="256" height="40" viewBox="0 0 256 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M154.333 13.3333V15.3333" stroke="#787486" stroke-width="1.3" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M159.667 13.3333V15.3333" stroke="#787486" stroke-width="1.3" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M159.667 14.3333C161.887 14.4533 163 15.3 163 18.4333V22.5533C163 25.3 162.333 26.6733 159 26.6733H155C151.667 26.6733 151 25.3 151 22.5533V18.4333C151 15.3 152.113 14.46 154.333 14.3333H159.667Z" stroke="#787486" stroke-width="1.3" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M162.833 23.7333H151.167" stroke="#787486" stroke-width="1.3" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M157 17.5C156.18 17.5 155.487 17.9467 155.487 18.8133C155.487 19.2267 155.68 19.54 155.973 19.74C155.567 19.98 155.333 20.3667 155.333 20.82C155.333 21.6467 155.967 22.16 157 22.16C158.027 22.16 158.667 21.6467 158.667 20.82C158.667 20.3667 158.433 19.9733 158.02 19.74C158.32 19.5333 158.507 19.2267 158.507 18.8133C158.507 17.9467 157.82 17.5 157 17.5ZM157 19.3933C156.653 19.3933 156.4 19.1867 156.4 18.86C156.4 18.5267 156.653 18.3333 157 18.3333C157.347 18.3333 157.6 18.5267 157.6 18.86C157.6 19.1867 157.347 19.3933 157 19.3933ZM157 21.3333C156.56 21.3333 156.24 21.1133 156.24 20.7133C156.24 20.3133 156.56 20.1 157 20.1C157.44 20.1 157.76 20.32 157.76 20.7133C157.76 21.1133 157.44 21.3333 157 21.3333Z" fill="#787486" />
            <rect x="134.5" y="0.5" width="121" height="39" rx="5.5" stroke="#787486" />
            <path d="M236 24.2C235.533 24.2 235.067 24.02 234.713 23.6667L230.367 19.32C230.173 19.1267 230.173 18.8067 230.367 18.6133C230.56 18.42 230.88 18.42 231.073 18.6133L235.42 22.96C235.74 23.28 236.26 23.28 236.58 22.96L240.927 18.6133C241.12 18.42 241.44 18.42 241.633 18.6133C241.827 18.8067 241.827 19.1267 241.633 19.32L237.287 23.6667C236.933 24.02 236.467 24.2 236 24.2Z" fill="#787486" />
            <path d="M171.705 15.875V14.3636H180.71V15.875H177.08V26H175.33V15.875H171.705ZM184.974 26.1761C184.156 26.1761 183.442 25.9886 182.832 25.6136C182.223 25.2386 181.749 24.714 181.412 24.0398C181.075 23.3655 180.906 22.5777 180.906 21.6761C180.906 20.7708 181.075 19.9792 181.412 19.3011C181.749 18.6231 182.223 18.0966 182.832 17.7216C183.442 17.3466 184.156 17.1591 184.974 17.1591C185.793 17.1591 186.507 17.3466 187.116 17.7216C187.726 18.0966 188.2 18.6231 188.537 19.3011C188.874 19.9792 189.043 20.7708 189.043 21.6761C189.043 22.5777 188.874 23.3655 188.537 24.0398C188.2 24.714 187.726 25.2386 187.116 25.6136C186.507 25.9886 185.793 26.1761 184.974 26.1761ZM184.98 24.75C185.51 24.75 185.95 24.6098 186.298 24.3295C186.647 24.0492 186.904 23.6761 187.071 23.2102C187.241 22.7443 187.327 22.2311 187.327 21.6705C187.327 21.1136 187.241 20.6023 187.071 20.1364C186.904 19.6667 186.647 19.2898 186.298 19.0057C185.95 18.7216 185.51 18.5795 184.98 18.5795C184.446 18.5795 184.003 18.7216 183.651 19.0057C183.302 19.2898 183.043 19.6667 182.872 20.1364C182.705 20.6023 182.622 21.1136 182.622 21.6705C182.622 22.2311 182.705 22.7443 182.872 23.2102C183.043 23.6761 183.302 24.0492 183.651 24.3295C184.003 24.6098 184.446 24.75 184.98 24.75ZM194.206 26.1705C193.501 26.1705 192.873 25.9905 192.32 25.6307C191.77 25.267 191.339 24.75 191.024 24.0795C190.714 23.4053 190.558 22.5966 190.558 21.6534C190.558 20.7102 190.715 19.9034 191.03 19.233C191.348 18.5625 191.784 18.0492 192.337 17.6932C192.89 17.3371 193.517 17.1591 194.217 17.1591C194.759 17.1591 195.195 17.25 195.524 17.4318C195.857 17.6098 196.115 17.8182 196.297 18.0568C196.482 18.2955 196.626 18.5057 196.729 18.6875H196.831V14.3636H198.53V26H196.871V24.642H196.729C196.626 24.8277 196.479 25.0398 196.286 25.2784C196.096 25.517 195.835 25.7254 195.501 25.9034C195.168 26.0814 194.736 26.1705 194.206 26.1705ZM194.581 24.7216C195.07 24.7216 195.482 24.5928 195.82 24.3352C196.161 24.0739 196.418 23.7121 196.592 23.25C196.77 22.7879 196.859 22.25 196.859 21.6364C196.859 21.0303 196.772 20.5 196.598 20.0455C196.424 19.5909 196.168 19.2367 195.831 18.983C195.494 18.7292 195.077 18.6023 194.581 18.6023C194.07 18.6023 193.643 18.7348 193.303 19C192.962 19.2652 192.704 19.6269 192.53 20.0852C192.359 20.5436 192.274 21.0606 192.274 21.6364C192.274 22.2197 192.361 22.7443 192.536 23.2102C192.71 23.6761 192.967 24.0455 193.308 24.3182C193.653 24.5871 194.077 24.7216 194.581 24.7216ZM203.494 26.1932C202.941 26.1932 202.441 26.0909 201.994 25.8864C201.547 25.678 201.193 25.3769 200.932 24.983C200.674 24.589 200.545 24.1061 200.545 23.5341C200.545 23.0417 200.64 22.6364 200.83 22.3182C201.019 22 201.275 21.7481 201.597 21.5625C201.919 21.3769 202.278 21.2367 202.676 21.142C203.074 21.0473 203.479 20.9754 203.892 20.9261C204.415 20.8655 204.839 20.8163 205.165 20.7784C205.491 20.7367 205.727 20.6705 205.875 20.5795C206.023 20.4886 206.097 20.3409 206.097 20.1364V20.0966C206.097 19.6004 205.956 19.2159 205.676 18.9432C205.4 18.6705 204.987 18.5341 204.438 18.5341C203.866 18.5341 203.415 18.661 203.085 18.9148C202.759 19.1648 202.534 19.4432 202.409 19.75L200.812 19.3864C201.002 18.8561 201.278 18.428 201.642 18.1023C202.009 17.7727 202.432 17.5341 202.909 17.3864C203.386 17.2348 203.888 17.1591 204.415 17.1591C204.763 17.1591 205.133 17.2008 205.523 17.2841C205.917 17.3636 206.284 17.5114 206.625 17.7273C206.97 17.9432 207.252 18.2519 207.472 18.6534C207.691 19.0511 207.801 19.5682 207.801 20.2045V26H206.142V24.8068H206.074C205.964 25.0265 205.799 25.2424 205.58 25.4545C205.36 25.6667 205.078 25.8428 204.733 25.983C204.388 26.1231 203.975 26.1932 203.494 26.1932ZM203.864 24.8295C204.333 24.8295 204.735 24.7367 205.068 24.5511C205.405 24.3655 205.661 24.1231 205.835 23.8239C206.013 23.5208 206.102 23.197 206.102 22.8523V21.7273C206.042 21.7879 205.924 21.8447 205.75 21.8977C205.58 21.947 205.384 21.9905 205.165 22.0284C204.945 22.0625 204.731 22.0947 204.523 22.125C204.314 22.1515 204.14 22.1742 204 22.1932C203.67 22.2348 203.369 22.3049 203.097 22.4034C202.828 22.5019 202.612 22.6439 202.449 22.8295C202.29 23.0114 202.21 23.2538 202.21 23.5568C202.21 23.9773 202.366 24.2955 202.676 24.5114C202.987 24.7235 203.383 24.8295 203.864 24.8295ZM210.825 29.2727C210.571 29.2727 210.34 29.2519 210.132 29.2102C209.924 29.1723 209.768 29.1307 209.666 29.0852L210.075 27.6932C210.386 27.7765 210.662 27.8125 210.905 27.8011C211.147 27.7898 211.361 27.6989 211.547 27.5284C211.736 27.358 211.903 27.0795 212.047 26.6932L212.257 26.1136L209.064 17.2727H210.882L213.092 24.0455H213.183L215.393 17.2727H217.217L213.621 27.1648C213.454 27.6193 213.242 28.0038 212.984 28.3182C212.727 28.6364 212.42 28.875 212.064 29.0341C211.708 29.1932 211.295 29.2727 210.825 29.2727Z" fill="#787486" />
            <path d="M18.6 13H27.4C28.1333 13 28.7333 13.6 28.7333 14.3333V15.8C28.7333 16.3333 28.4 17 28.0667 17.3333L25.2 19.8667C24.8 20.2 24.5333 20.8667 24.5333 21.4V24.2667C24.5333 24.6667 24.2667 25.2 23.9333 25.4L23 26C22.1333 26.5333 20.9333 25.9333 20.9333 24.8667V21.3333C20.9333 20.8667 20.6667 20.2667 20.4 19.9333L17.8667 17.2667C17.5333 16.9333 17.2667 16.3333 17.2667 15.9333V14.4C17.2667 13.6 17.8667 13 18.6 13Z" stroke="#787486" stroke-width="1.3" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M94 23.2C93.5333 23.2 93.0667 23.02 92.7133 22.6667L88.3667 18.32C88.1733 18.1267 88.1733 17.8067 88.3667 17.6133C88.56 17.42 88.88 17.42 89.0733 17.6133L93.42 21.96C93.74 22.28 94.26 22.28 94.58 21.96L98.9267 17.6133C99.12 17.42 99.44 17.42 99.6333 17.6133C99.8267 17.8067 99.8267 18.1267 99.6333 18.32L95.2867 22.6667C94.9333 23.02 94.4667 23.2 94 23.2Z" fill="#787486" />
            <rect x="0.5" y="0.5" width="121" height="39" rx="5.5" stroke="#787486" />
            <path d="M38.2784 26V14.3636H45.4943V15.875H40.0341V19.4205H44.9773V20.9261H40.0341V26H38.2784ZM47.517 26V17.2727H49.2159V26H47.517ZM48.375 15.9261C48.0795 15.9261 47.8258 15.8277 47.6136 15.6307C47.4053 15.4299 47.3011 15.1913 47.3011 14.9148C47.3011 14.6345 47.4053 14.3958 47.6136 14.1989C47.8258 13.9981 48.0795 13.8977 48.375 13.8977C48.6705 13.8977 48.9223 13.9981 49.1307 14.1989C49.3428 14.3958 49.4489 14.6345 49.4489 14.9148C49.4489 15.1913 49.3428 15.4299 49.1307 15.6307C48.9223 15.8277 48.6705 15.9261 48.375 15.9261ZM53.2003 14.3636V26H51.5014V14.3636H53.2003ZM59.5597 17.2727V18.6364H54.7926V17.2727H59.5597ZM56.071 15.1818H57.7699V23.4375C57.7699 23.767 57.8191 24.0152 57.9176 24.1818C58.0161 24.3447 58.143 24.4564 58.2983 24.517C58.4574 24.5739 58.6297 24.6023 58.8153 24.6023C58.9517 24.6023 59.071 24.5928 59.1733 24.5739C59.2756 24.5549 59.3551 24.5398 59.4119 24.5284L59.7188 25.9318C59.6203 25.9697 59.4801 26.0076 59.2983 26.0455C59.1165 26.0871 58.8892 26.1098 58.6165 26.1136C58.1695 26.1212 57.7528 26.0417 57.3665 25.875C56.9801 25.7083 56.6676 25.4508 56.429 25.1023C56.1903 24.7538 56.071 24.3163 56.071 23.7898V15.1818ZM65.1065 26.1761C64.2467 26.1761 63.5062 25.9924 62.8849 25.625C62.2675 25.2538 61.7902 24.733 61.4531 24.0625C61.1198 23.3883 60.9531 22.5985 60.9531 21.6932C60.9531 20.7992 61.1198 20.0114 61.4531 19.3295C61.7902 18.6477 62.2599 18.1155 62.8622 17.733C63.4683 17.3504 64.1766 17.1591 64.9872 17.1591C65.4796 17.1591 65.9569 17.2405 66.419 17.4034C66.8812 17.5663 67.2959 17.822 67.6634 18.1705C68.0308 18.5189 68.3205 18.9716 68.5327 19.5284C68.7448 20.0814 68.8509 20.7538 68.8509 21.5455V22.1477H61.9134V20.875H67.1861C67.1861 20.428 67.0952 20.0322 66.9134 19.6875C66.7315 19.339 66.4759 19.0644 66.1463 18.8636C65.8205 18.6629 65.438 18.5625 64.9986 18.5625C64.5213 18.5625 64.1046 18.6799 63.7486 18.9148C63.3963 19.1458 63.1236 19.4489 62.9304 19.8239C62.741 20.1951 62.6463 20.5985 62.6463 21.0341V22.0284C62.6463 22.6117 62.7486 23.108 62.9531 23.517C63.1615 23.9261 63.4512 24.2386 63.8224 24.4545C64.1937 24.6667 64.6274 24.7727 65.1236 24.7727C65.4455 24.7727 65.7391 24.7273 66.0043 24.6364C66.2694 24.5417 66.4986 24.4015 66.6918 24.2159C66.8849 24.0303 67.0327 23.8011 67.1349 23.5284L68.7429 23.8182C68.6141 24.2917 68.383 24.7064 68.0497 25.0625C67.7202 25.4148 67.3054 25.6894 66.8054 25.8864C66.3092 26.0795 65.7429 26.1761 65.1065 26.1761ZM70.7358 26V17.2727H72.3778V18.6591H72.4688C72.6278 18.1894 72.9081 17.8201 73.3097 17.5511C73.715 17.2784 74.1733 17.142 74.6847 17.142C74.7907 17.142 74.9157 17.1458 75.0597 17.1534C75.2074 17.161 75.3229 17.1705 75.4062 17.1818V18.8068C75.3381 18.7879 75.2169 18.767 75.0426 18.7443C74.8684 18.7178 74.6941 18.7045 74.5199 18.7045C74.1184 18.7045 73.7604 18.7898 73.446 18.9602C73.1354 19.1269 72.8892 19.3598 72.7074 19.6591C72.5256 19.9545 72.4347 20.2917 72.4347 20.6705V26H70.7358Z" fill="#787486" />
          </svg>
        </div>
      </div>
      <div className="all-columns">
        <div className="todo">
          <span className="todo-heading">
            <span className="todo-dics"></span>
            <p>To Do</p>
            <span className="todo-counter">{toDo.length}</span>
          </span>
          <div
            className="todo-cards"
            onDragStart={()=>setDragging(true)}
            onDrop={(event) => handleDrop(event, 'toDo')}
            onDragOver={handleDragOver}
          >
            {toDo.length > 0 
            ? toDo.map((card) => (
              <Card key={card.id} cardDiv='todo'  card={card} tilt={tiltCardId} onDragStart={(event)=>dragStarted(event,card.id)}/>
              ))
            : <h3 style={{width:'100%',textAlign:'center'}}>No cards</h3>}
          </div>
        </div>
        <div className="on-progress">
          <span className="on-progress-heading">
            <span className="on-progress-dics"></span>
            <p>On Progress</p>
            <span className="on-progress-counter">{onProgress.length}</span>
          </span>
          <div
            className="on-progress-cards"
            onDragStart={()=>setDragging(true)}
            onDrop={(event) => handleDrop(event, 'onProgress')}
            onDragOver={handleDragOver}
          >
            {onProgress.length > 0 
            ? onProgress.map((card) => (
              <Card key={card.id}  card={card} tilt={tiltCardId} onDragStart={(event)=>dragStarted(event,card.id)}/>
              ))
            : <h3 style={{width:'100%',textAlign:'center'}}>No cards</h3>}
          </div>
        </div>
        <div className="done">
          <span className="done-heading">
            <span className="done-dics"></span>
            <p>Done</p>
            <span className="done-counter">{done.length}</span>
          </span>
          <div
            className="done-cards"
            onDragStart={()=>setDragging(true)}
            onDrop={(event) => handleDrop(event, 'done')}
            onDragOver={handleDragOver}
          >
            {
            done.length > 0 ?
            done.map((card) => (
              <Card key={card.id} cardDiv='done' card={card} tilt={tiltCardId} onDragStart={(event)=>dragStarted(event,card.id)}/>
            ))
            : <h3 style={{width:'100%',textAlign:'center'}}>No cards</h3>}
          </div>
        </div>
      </div>
    </div>
  );
}
